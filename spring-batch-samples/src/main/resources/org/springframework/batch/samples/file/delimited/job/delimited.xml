<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:batch="http://www.springframework.org/schema/batch"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/batch https://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<batch:job id="ioSampleJob" xmlns="http://www.springframework.org/schema/batch">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="itemReader" processor="itemProcessor" writer="itemWriter"
							 commit-interval="2"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="itemProcessor" class="org.springframework.batch.samples.domain.trade.internal.CustomerCreditIncreaseProcessor" />

	<bean id="itemReader" class="org.springframework.batch.infrastructure.item.file.FlatFileItemReader" scope="step">
		<constructor-arg name="lineMapper">
			<bean class="org.springframework.batch.infrastructure.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.infrastructure.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value=","/>
						<property name="names" value="name,credit" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.infrastructure.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="org.springframework.batch.samples.domain.trade.CustomerCredit" />
					</bean>
				</property>
			</bean>
		</constructor-arg>
		<property name="resource" value="#{jobParameters[inputFile]}" />
	</bean>

	<bean id="itemWriter" class="org.springframework.batch.infrastructure.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="#{jobParameters[outputFile]}" />
		<constructor-arg name="lineAggregator">
			<bean class="org.springframework.batch.infrastructure.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value=","/>
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.infrastructure.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="name,credit"/>
					</bean>
				</property>
			</bean>
		</constructor-arg>
	</bean>

</beans>
